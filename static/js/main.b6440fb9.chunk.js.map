{"version":3,"sources":["components/exercises/RememberNumber.js","components/exercises/RememberWord.js","components/exercises/FindMistakeWords.js","components/exercises/FindMistakeWords2.js","components/exercises/FirstExercise.js","components/exercises/StopWatch.js","components/exercises/OrderNumber.js","components/App.js","serviceWorker.js","index.js"],"names":["RememberNumber","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateNumber","setState","isRight","isWrong","firstRange","state","lastRange","val","Math","floor","random","speed","currentNumber","isShow","setTimeout","bind","assertThisInitialized","handleInputValue","e","value","target","displayNumber","number","react_default","a","createElement","_handleKeyPress","key","enteredNumber","parseInt","score","String","newFirstRange","Number","newLastRange","displaySpeed","slice","digitNum","toString","length","repeat","className","type","autoFocus","style","width","onKeyPress","onChange","React","Component","customStyles","content","top","left","right","bottom","marginRight","height","transform","WORDS","RememberWord","handleChangeWord","startNum","startNumber","endNum","endNumber","wordBoxIndex","indexNum","newWords","displayWords","fill","displayWordCount","digitCount","index","modalIsOpen","currentWord","afterOpenModal","randomWords","randomWord","i","generateRandom","min","max","num","startRandomWords","location_x","location_y","randomNum","randomIndexWordNum","intervalId","setInterval","handleDisplayWord","clearInterval","underlines","wordDisplay","indexCount","word","_this2","map","underline","padding","position","lib_default","isOpen","onAfterOpen","contentLabel","onClick","handleWordClick","Modal","setAppElement","POSSIBLE","Row","_ref","character","id","FindMistakeWords","handleChangeCharacter","new1","new2","new3","new4","_randomCharacter","data","update","0","$set","24","4","20","workCount","mistake","intervalID","character_set","charAt","push","rows","rowData","FindMistakeWords_Row","assign","FindMistakeWords2","startChangeFunction","againStart","playCount","buttonMistake","handleMistake","FindMistakeWords2_Row","foundMistakes","mistakes","marginTop","marginLeft","FirstExercise","handleScrollY","vertical","intervalYId","scroll","handleScrollX","horizontal","intervalXId","startBall","handleSpeedUp","handleSlowDown","intervaXId","intervaYId","react_motion","x","spring","WebkitTransform","concat","formattedSeconds","sec","StopWatch","secondsElapsed","laps","lastClearedIncrementer","incrementer","_this3","start","StopWatch_Button","handleResetClick","lap","Button","OrderNumber","numbers","ismounted","_ismounted","arr","r","indexOf","startStopWatch","exercises_StopWatch","variant","color","handleNumberClick","button","handleButton","App","preventDefault","buttonNum","selected","renderComponents","exercises_FirstExercise","exercises_OrderNumber","exercises_FindMistakeWords","exercises_FindMistakeWords2","exercises_RememberNumber","exercises_RememberWord","buttons","App_Button","href","aria-label","viewBox","border","aria-hidden","d","transformOrigin","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6440fb9.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\n\r\nclass RememberNumber extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            currentNumber: 0,\r\n            isShow: false,\r\n            score: 0,\r\n            speed: 800,\r\n            firstRange: 10000,\r\n            lastRange: 90000,\r\n            isRight: false,\r\n            value: '',\r\n            isWrong: false,\r\n            displaySpeed:500\r\n\r\n        }\r\n    }\r\n\r\n    generateNumber = () => {\r\n        this.setState({\r\n            isRight: false,\r\n            isWrong: false\r\n        })\r\n        var firstRange = this.state.firstRange\r\n        var lastRange = this.state.lastRange\r\n        var val = Math.floor(firstRange + Math.random() * lastRange);\r\n        var speed = this.state.speed\r\n        this.setState({\r\n            currentNumber: val,\r\n            isShow: true,\r\n        })\r\n        setTimeout(\r\n            function() {\r\n                this.setState({\r\n                    isShow: false,\r\n                });\r\n            }\r\n            .bind(this),\r\n            speed\r\n        );\r\n    }\r\n\r\n    handleInputValue=(e)=>{\r\n        var value = e.target.value\r\n        this.setState({\r\n            value: value\r\n        })\r\n    }\r\n\r\n    displayNumber = () => {\r\n        var number = this.state.currentNumber\r\n        return (\r\n            <div>{number}</div>\r\n        )\r\n    }\r\n\r\n    _handleKeyPress = (e) =>{\r\n        if (e.key === 'Enter') {\r\n            this.setState({value: ''})\r\n            var enteredNumber = parseInt(e.target.value)\r\n            var currentNumber = this.state.currentNumber\r\n            var score = this.state.score+1\r\n            var speed = this.state.speed\r\n            var firstRange = String(this.state.firstRange)\r\n            var lastRange = String(this.state.lastRange)\r\n            if (enteredNumber === currentNumber){\r\n                var newFirstRange = Number(firstRange+'0')\r\n                var newLastRange = Number(lastRange+'0')\r\n                this.setState({\r\n                    score: score,\r\n                    speed: speed-40,\r\n                    displaySpeed: this.state.displaySpeed+40,\r\n                    firstRange: newFirstRange,\r\n                    lastRange: newLastRange,\r\n                    isRight: true,\r\n                })\r\n                setTimeout(this.generateNumber, 700)\r\n            }else{\r\n                var newFirstRange = Number(firstRange.slice(0, -1));\r\n                var newLastRange = Number(lastRange.slice(0, -1));\r\n                if(firstRange >= 1000 && lastRange <= 9000){\r\n                    if(speed <= 1000)\r\n                    {\r\n                        this.setState({\r\n                            speed: speed+40,\r\n                            displaySpeed: this.state.displaySpeed-40,\r\n                        })\r\n                    }\r\n                }else{\r\n                    if(speed <= 1000)\r\n                    {\r\n                        this.setState({\r\n                            displaySpeed: this.state.displaySpeed-40,\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        firstRange: newFirstRange,\r\n                        lastRange: newLastRange\r\n                    })\r\n                }\r\n                this.setState({\r\n                    isWrong: true\r\n                })\r\n                setTimeout(this.generateNumber, 700)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(\r\n            function() {\r\n                this.generateNumber()\r\n            }\r\n            .bind(this),\r\n            3000\r\n        );\r\n    }\r\n    render(){\r\n        var number = this.state.currentNumber\r\n        var digitNum = this.state.currentNumber.toString().length\r\n        var blankChracter = '_ '\r\n        var repeat = blankChracter.repeat(digitNum)\r\n        const speed = this.state.displaySpeed\r\n        return(\r\n            <div className={\"row\"}>\r\n                <div className={\"row s6\"}>\r\n                    <span>Find the right number.</span>\r\n                </div>\r\n                <div>\r\n                    { !this.state.isShow &&\r\n                            repeat\r\n                    }\r\n                    { this.state.isShow &&\r\n                        number\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                    <input\r\n                        value={this.state.value}\r\n                        type=\"text\"\r\n                        autoFocus={true}\r\n                        style={{width: '150px'}}\r\n                        onKeyPress={this._handleKeyPress}\r\n                        onChange={this.handleInputValue}\r\n                    />\r\n\r\n                    {\r\n                        this.state.isRight &&\r\n                        <span>✓</span>\r\n                    }\r\n\r\n                    {\r\n                        this.state.isWrong &&\r\n                        <span>✗</span>\r\n                    }\r\n                </div>\r\n                Speed: {speed}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RememberNumber;","import React, {Component} from 'react'\r\nimport Modal from 'react-modal';\r\nimport {Motion, spring} from 'react-motion';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      width: '55%',\r\n      height: '45%',\r\n      transform             : 'translate(-64%, -35%)'\r\n    }\r\n};\r\nconst WORDS = ['abandon',\r\n    'ability',\r\n    'able',\r\n    'abortion',\r\n    'about',\r\n    'above',\r\n    'abroad',\r\n    'absence',\r\n    'absolute',\r\n    'absolutely',\r\n    'absorb',\r\n    'abuse',\r\n    'academic',\r\n    'accept',\r\n    'access',\r\n    'accident',\r\n    'accompany',\r\n    'accomplish',\r\n    'according',\r\n    'account',\r\n    'accurate',\r\n    'accuse',\r\n    'achieve',\r\n    'achievement',\r\n    'acid',\r\n    'acknowledge',\r\n    'acquire',\r\n    'across',\r\n    'act',\r\n    'action',\r\n    'active',\r\n    'activist',\r\n    'activity',\r\n    'actor',\r\n    'actress',\r\n]\r\nclass RememberWord extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            modalIsOpen: false,\r\n            displayWords: ['___', '___', '___', '___', '___', '___', '___', '___', '___', ],\r\n            indexNum: 1,\r\n            startNumber: 0,\r\n            endNumber: 15,\r\n            displayWordCount: 15,\r\n            wordBoxIndex: 0,\r\n            randomWords: [],\r\n            currentWord: '',\r\n            isRight: false,\r\n            speed: 300,\r\n            digitCount :0,\r\n            underlines: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,16,17,18,19,20,21,22,23,24,25],\r\n            location_x: 0,\r\n            location_y: 0,\r\n            wordDisplay: false,\r\n            indexCount: 1,\r\n            isWrong: false,\r\n            randomNum: 0,\r\n            displaySpeed: 500\r\n        }\r\n        this.intervalId=0;\r\n    }\r\n\r\n    handleChangeWord = () =>{\r\n        var startNum = this.state.startNumber+1\r\n        var endNum = this.state.endNumber\r\n        var wordBoxIndex = this.state.wordBoxIndex\r\n        const speed = this.state.speed\r\n        if(startNum <= endNum){\r\n            var indexNum = this.state.indexNum\r\n            var newWords = this.state.displayWords.fill('___', 0)\r\n            var displayWordCount = this.state.displayWordCount\r\n            newWords[indexNum] = WORDS[wordBoxIndex]\r\n            var digitCount = this.state.digitCount\r\n            if(indexNum <= digitCount){\r\n                this.setState({\r\n                    indexNum: indexNum+1,\r\n                    displayWords: newWords,\r\n                    displayWordCount: displayWordCount-1,\r\n                    startNumber: startNum,\r\n                    wordBoxIndex: wordBoxIndex+1\r\n                })\r\n                setTimeout(this.handleChangeWord, speed)\r\n            }else{\r\n                this.setState({\r\n                    indexNum: 0,\r\n                    wordBoxIndex: wordBoxIndex+1\r\n                })\r\n                setTimeout(this.handleChangeWord, speed)\r\n            }\r\n        }\r\n        else{\r\n            var index = wordBoxIndex-1\r\n            this.setState({\r\n                modalIsOpen: true,\r\n                currentWord: WORDS[index]\r\n            });\r\n        }\r\n    }\r\n\r\n    afterOpenModal = () => {\r\n        // this.subtitle.style.color = '#f00';\r\n        var randomWords = []\r\n        var randomWord = ''\r\n        for(var i=0; i<6; i++){\r\n            randomWord = Math.floor(Math.random()*20)\r\n            randomWords[i] = WORDS[randomWord]\r\n        }\r\n        var randomIndex = Math.floor(Math.random()*6)\r\n        randomWords[randomIndex] = this.state.currentWord\r\n        this.setState({\r\n            randomWords: randomWords,\r\n        })\r\n\r\n    }\r\n\r\n    handleWordClick(word){\r\n        const speed = this.state.speed\r\n        const displaySpeed = this.state.displaySpeed\r\n        if(this.state.currentWord === word){\r\n            if(speed >= 5){\r\n                this.setState({\r\n                    isRight: true,\r\n                    speed: speed-20,\r\n                    displaySpeed: displaySpeed+20\r\n                })\r\n            }\r\n        }\r\n        else(\r\n            this.setState({\r\n                isWrong: true,\r\n                speed: speed+20,\r\n                displaySpeed: displaySpeed-20\r\n            })\r\n        )\r\n        var digitCount = Math.floor(Math.random() * 5)\r\n        this.setState({\r\n            startNumber: 0,\r\n            endNumber: 11,\r\n            digitCount: digitCount\r\n        })\r\n        setTimeout(\r\n            function() {\r\n                this.setState({\r\n                    isRight: false,\r\n                    modalIsOpen: false,\r\n                    isWrong: false\r\n                });\r\n            }\r\n            .bind(this),\r\n            300\r\n        );\r\n        setTimeout(this.startRandomWords, 500)\r\n    }\r\n\r\n    generateRandom = (min, max) => {\r\n        var num = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        return (num === 0 || num === 1) ? this.generateRandom(min, max) : num;\r\n    }\r\n\r\n    startRandomWords=()=>{\r\n        this.setState({\r\n            digitCount: 9,\r\n            currentWord: WORDS[0],\r\n            location_x: 208,\r\n            location_y: 201,\r\n            indexNum: 1,\r\n            randomNum: this.randomIndexWordNum()\r\n        })\r\n\r\n        this.intervalId = setInterval(this.handleDisplayWord, this.state.speed)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.startRandomWords()\r\n    }\r\n\r\n    randomIndexWordNum=()=>{\r\n        return Math.floor(Math.random()*25)\r\n    }\r\n\r\n    handleDisplayWord = () => {\r\n        const location_x = this.state.location_x\r\n        const location_y = this.state.location_y\r\n        const indexNum = this.state.indexNum\r\n        var randomNum = this.state.randomNum\r\n\r\n        if(indexNum === randomNum){\r\n            clearInterval(this.intervalId)\r\n            this.setState({\r\n                modalIsOpen: true\r\n            })\r\n        }else{\r\n            if(randomNum===0){\r\n                clearInterval(this.intervalId)\r\n                this.setState({\r\n                    modalIsOpen: true\r\n                })\r\n            }\r\n            if((indexNum%5) === 0){\r\n                this.setState({\r\n                    location_x: 208,\r\n                    indexNum: indexNum+1,\r\n                    location_y: location_y+22,\r\n                    currentWord: WORDS[indexNum]\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    location_x: location_x+130,\r\n                    indexNum: indexNum+1,\r\n                    currentWord: WORDS[indexNum]\r\n                })\r\n            }\r\n            if(indexNum === 25){\r\n                this.setState({\r\n                    location_x: 190,\r\n                    location_y: 50,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        const randomWords = this.state.randomWords\r\n        var isRight = this.state.isRight\r\n        var isWrong = this.state.isWrong\r\n        const location_x = this.state.location_x\r\n        const location_y = this.state.location_y\r\n        const displaySpeed = this.state.displaySpeed\r\n        return(\r\n            <div className={\"row\"}>\r\n                <div className={\"row s6\"}>\r\n                    <span>Remember the right word.</span>\r\n                </div>\r\n                <div className=\"col\">\r\n                {\r\n                    this.state.underlines.map( (underline, i) =>{\r\n                        return(\r\n                            <span><span>____________________</span><span> </span>\r\n                            {((i+1) % 5) === 0 &&\r\n                                    <br/>\r\n                            }\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n                <span  style={{padding: '20px', left:location_x+\"px\", top:location_y+\"px\", position:'absolute'}}>\r\n                    {this.state.currentWord}\r\n                </span>\r\n\r\n                <div>\r\n                    Speed: {displaySpeed}\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    style={customStyles}\r\n                    contentLabel=\"Example Modal\">\r\n                    {\r\n                        randomWords.map((word, i) =>(\r\n                            <span>\r\n                                <button\r\n                                    className={\"remember-word-margin-button waves-effect waves-light btn deep-purple lighten-2\"}\r\n                                    value={word}\r\n                                    onClick={() => this.handleWordClick(word)}>\r\n                                    {word}\r\n                                </button>\r\n                                {((i+1) % 3) === 0 &&\r\n                                    <br/>\r\n                                }\r\n                            </span>\r\n                        ))\r\n                    }\r\n                    {\r\n                        isRight &&\r\n                        <span>✓</span>\r\n                    }\r\n\r\n                    {\r\n                        isWrong &&\r\n                        <span>✗</span>\r\n                    }\r\n                </Modal>\r\n                {/* {\r\n                    displayWords.map((word, i) => (\r\n                        <span>\r\n                            <span>{word +' '}</span>\r\n                            {((i+1) % 5) === 0 &&\r\n                                <br/>\r\n                            }\r\n                        </span>\r\n                    ))\r\n                } */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nexport default RememberWord;","import React, {Component} from 'react'\r\nimport '../App.scss';\r\nimport update from 'react-addons-update';\r\n\r\n/*\r\n  Row component written as a simple function:\r\n  https://facebook.github.io/react/docs/components-and-props.html#functional-and-class-components\r\n\r\n  Any components that do not have state should be written this way,\r\n  see: https://medium.com/@housecor/react-stateless-functional-components-nine-wins-you-might-have-overlooked-997b0d933dbc\r\n*/\r\nconst POSSIBLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\nconst Row = ({character, id}) => (\r\n    <span>\r\n      <button className={\"waves-effect waves-light btn red lighten-2 order-number-buttons\"}>{character}</button>\r\n      {\r\n        ((id+1) % 5) === 0 &&\r\n        <br/>\r\n      }\r\n    </span>\r\n  );\r\n\r\nclass FindMistakeWords extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    data: [\r\n        {character: 'A'},\r\n    ],\r\n    workCount: 0,\r\n    mistake: 0\r\n    };\r\n\r\n    this.intervalID =0;\r\n}\r\n\r\ncomponentWillMount(){\r\n    var i = 0\r\n    var data = []\r\n    var character_set\r\n    for(i; i<25; i++){\r\n        if(i === 12){\r\n            character_set = {id: 12, character: '.'}\r\n        }\r\n        else{\r\n            character_set = {id: i, character: POSSIBLE.charAt(Math.floor(Math.random() * POSSIBLE.length))}\r\n        }\r\n        data.push(character_set)\r\n    }\r\n    this.setState({\r\n        data: data\r\n    })\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.intervalID = setInterval(this.handleChangeCharacter, 900)\r\n}\r\n\r\n_randomCharacter (){\r\n    return POSSIBLE.charAt(Math.floor(Math.random() * POSSIBLE.length))\r\n}\r\n\r\nhandleChangeCharacter=()=>{\r\n    var randomNum = Math.floor(Math.random()*10)\r\n    var new1, new2, new3, new4;\r\n    new1 = this._randomCharacter()\r\n    new2 = this._randomCharacter()\r\n    new3 = this._randomCharacter()\r\n    new4 = this._randomCharacter()\r\n\r\n    switch(randomNum){\r\n        case 0:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        0: {character: {$set: new1}},\r\n                        24: {character: {$set: new4}}\r\n                    }),\r\n                }\r\n            )\r\n        case 1:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        0: {character: {$set: new1}},\r\n                    }),\r\n                }\r\n            )\r\n        case 2:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        4: {character: {$set: new2}},\r\n                    }),\r\n                }\r\n            )\r\n        case 3:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        20: {character: {$set: new3}},\r\n                    }),\r\n                }\r\n            )\r\n        case 4:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        0: {character: {$set: new1}},\r\n                        20: {character: {$set: new3}}\r\n                    }),\r\n                }\r\n            )\r\n        case 5:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        24: {character: {$set: new4}},\r\n                    }),\r\n                }\r\n            )\r\n        case 6:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        0: {character: {$set: new2}},\r\n                        4: {character: {$set: new3}},\r\n                        20: {character: {$set: new4}},\r\n                        24: {character: {$set: new1}},\r\n                    })\r\n                }\r\n            )\r\n        case 7:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        4: {character: {$set: new2}},\r\n                        20: {character: {$set: new3}}\r\n                    }),\r\n                }\r\n            )\r\n        case 8:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        4: {character: {$set: new2}},\r\n                        24: {character: {$set: new4}}\r\n                    }),\r\n                }\r\n            )\r\n        case 9:\r\n            this.setState(\r\n                {\r\n                    data: update(this.state.data, {\r\n                        20: {character: {$set: new3}},\r\n                        24: {character: {$set: new4}}\r\n                    }),\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        const rows = this.state.data.map( (rowData) => <Row key={rowData.id} {...rowData} />);\r\n\r\n        return (\r\n        <div className={\"row\"}>\r\n            <div className={\"row s6\"}><span>Look at the center point and follow the changes.</span></div>\r\n            <div className=\"body\">\r\n                {rows}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindMistakeWords;","import React, {Component} from 'react'\r\nimport '../App.scss';\r\nimport update from 'react-addons-update';\r\nimport Modal from 'react-modal';\r\n\r\nconst POSSIBLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      width: '30%',\r\n      height: '30%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst Row = ({character, id}) => (\r\n    <span>\r\n      <button className={\"waves-effect waves-light btn green order-number-buttons\"}>{character}</button>\r\n      {\r\n        ((id+1) % 5) === 0 &&\r\n        <br/>\r\n      }\r\n    </span>\r\n  );\r\n  /*\r\n    Table component written as an ES6 class\r\n  */\r\n  class FindMistakeWords2 extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data: [\r\n          {character: 'A'},\r\n        ],\r\n        workCount: 0,\r\n        mistake: 0,\r\n        playCount: 0,\r\n        buttonMistake: 0,\r\n        modalIsOpen: false\r\n      };\r\n\r\n      this.intervalID =0;\r\n    }\r\n\r\n    componentDidMount(){\r\n       this.startChangeFunction()\r\n    }\r\n\r\n    startChangeFunction=()=>{\r\n        var i = 0\r\n        var data = []\r\n        var character_set\r\n        for(i; i<25; i++){\r\n            if(i === 12){\r\n                character_set = {id: 12, character: '.'}\r\n            }\r\n            else{\r\n                character_set = {id: i, character: POSSIBLE.charAt(Math.floor(Math.random() * POSSIBLE.length))}\r\n            }\r\n            data.push(character_set)\r\n        }\r\n        this.setState({\r\n            data: data\r\n        })\r\n        this.intervalID = setInterval(this.handleChangeCharacter, 750)\r\n    }\r\n\r\n    againStart=()=>{\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            mistake: 0,\r\n            playCount: 0,\r\n            buttonMistake: 0\r\n        })\r\n        this.startChangeFunction()\r\n    }\r\n\r\n    _randomCharacter(){\r\n        return POSSIBLE.charAt(Math.floor(Math.random() * POSSIBLE.length))\r\n    }\r\n\r\n    handleChangeCharacter=()=>{\r\n        var randomNum = Math.floor(Math.random()*10)\r\n        var new1, new2\r\n        new1 = this._randomCharacter()\r\n        new2 = this._randomCharacter()\r\n        var mistake = this.state.mistake+1\r\n        var playCount = this.state.playCount\r\n        if(playCount === 20){\r\n            clearInterval(this.intervalID)\r\n            this.setState({\r\n                modalIsOpen: true\r\n            })\r\n        }else{\r\n            switch(randomNum){\r\n                case 0:\r\n                    return (this.setState(\r\n                        {\r\n                            data: update(this.state.data, {\r\n                                24: {character: {$set: new1}},\r\n                                0: {character: {$set: new2}},\r\n                                4: {character: {$set: new2}},\r\n                                20: {character: {$set: new2}},\r\n                            }),\r\n                            mistake: mistake\r\n                        }\r\n                    ))\r\n                case 1:\r\n                    return (this.setState(\r\n                        {\r\n                            data: update(this.state.data, {\r\n                                0: {character: {$set: new1}},\r\n                                24: {character: {$set: new2}},\r\n                                4: {character: {$set: new2}},\r\n                                20: {character: {$set: new2}},\r\n                            }),\r\n                            mistake: mistake\r\n                        }\r\n                    ))\r\n                case 2:\r\n                    return (this.setState(\r\n                        {\r\n                            data: update(this.state.data, {\r\n                                4: {character: {$set: new1}},\r\n                                24: {character: {$set: new2}},\r\n                                0: {character: {$set: new2}},\r\n                                20: {character: {$set: new2}},\r\n                            }),\r\n                            mistake: mistake\r\n                        }\r\n                    ))\r\n                case 3:\r\n                    return (this.setState(\r\n                        {\r\n                            data: update(this.state.data, {\r\n                                20: {character: {$set: new1}},\r\n                                4: {character: {$set: new2}},\r\n                                24: {character: {$set: new2}},\r\n                                0: {character: {$set: new2}},\r\n                            }),\r\n                            mistake: mistake\r\n                        }\r\n                    ))\r\n                default:\r\n                    this.setState(\r\n                        {\r\n                            data: update(this.state.data, {\r\n                                20: {character: {$set: new1}},\r\n                                4: {character: {$set: new1}},\r\n                                24: {character: {$set: new1}},\r\n                                0: {character: {$set: new1}},\r\n                            }),\r\n                        }\r\n                    )\r\n            }\r\n        }\r\n        this.setState({\r\n            playCount: playCount+1\r\n        })\r\n    }\r\n\r\n    handleMistake=()=>{\r\n        var buttonMistake = this.state.buttonMistake+1\r\n        this.setState({\r\n            buttonMistake: buttonMistake\r\n        })\r\n    }\r\n\r\n    afterOpenModal=()=>{\r\n\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.data.map( (rowData) => <Row key={rowData.id} {...rowData} />);\r\n        const foundMistakes = this.state.buttonMistake\r\n        const mistakes = this.state.mistake\r\n      return (\r\n        <div className={\"row\"}>\r\n            <div className={\"row\"}><span>Look at the center point, find the changed letters and press button.</span></div>\r\n            <div>\r\n                {rows}\r\n            </div>\r\n            <div className={\"col s8\"} style={{marginTop: '10px', marginLeft: '65px'}}>\r\n                <button className={\"waves-effect waves-light btn orange lighten-1\"} onClick={this.handleMistake}>Mistake</button>\r\n            </div>\r\n            <Modal\r\n                    isOpen={this.state.modalIsOpen}\r\n                    onAfterOpen={this.afterOpenModal}\r\n                    style={customStyles}\r\n                    contentLabel=\"Example Modal\">\r\n                    Mistakes you found: {foundMistakes}\r\n                    <br/>\r\n                    Real mistakes: {mistakes}\r\n                    <br/>\r\n                    <button className={\"waves-effect waves-light btn green lighten-2\"} onClick={this.againStart}>Again</button>\r\n            </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default FindMistakeWords2;","import React, {Component} from 'react'\r\nimport {Motion, spring} from 'react-motion';\r\n\r\nclass FirstExercise extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            scroll: false,\r\n            vertical: true,\r\n            horizontal: true,\r\n            location_x: 0,\r\n            location_y: 0,\r\n            speed: 450\r\n        };\r\n        this.intervaXId=0;\r\n        this.intervaYId=0;\r\n    };\r\n\r\n    handleScrollY=()=>{\r\n        var location_x = this.state.location_x\r\n        var location_y = this.state.location_y\r\n        var vertical = this.state.vertical\r\n\r\n        if(location_x === 590){\r\n            this.setState({\r\n                location_y: 0\r\n            })\r\n            clearInterval(this.intervalYId)\r\n        }else{\r\n            if(vertical){\r\n                this.setState({\r\n                    location_x: location_x+5,\r\n                    location_y: 530,\r\n                    scroll: true,\r\n                    vertical: false\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    location_y: 0,\r\n                    scroll: false,\r\n                    vertical: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleScrollX=()=>{\r\n        var location_x = this.state.location_x\r\n        var location_y = this.state.location_y\r\n        var horizontal = this.state.horizontal\r\n\r\n        if(location_y === 520){\r\n            this.setState({\r\n                location_x: 0\r\n            })\r\n            clearInterval(this.intervalXId)\r\n            this.intervalYId = setInterval(this.handleScrollY, 270)\r\n        }else{\r\n            if(horizontal){\r\n                this.setState({\r\n                    location_x: 600,\r\n                    location_y: location_y+5,\r\n                    scroll: true,\r\n                    horizontal: false\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    location_x: 0,\r\n                    scroll: false,\r\n                    horizontal: true\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount(){\r\n        setTimeout(this.startBall, 1000)\r\n    }\r\n\r\n    startBall=()=>{\r\n        this.intervalXId = setInterval(this.handleScrollX, 270)\r\n    }\r\n\r\n    handleSpeedUp=()=>{\r\n        var speed = this.state.speed\r\n        this.setState({\r\n            speed: speed+10\r\n        })\r\n    }\r\n\r\n    handleSlowDown=()=>{\r\n        var speed = this.state.speed\r\n        this.setState({\r\n            speed: speed-10\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const location_x = this.state.location_x\r\n    const location_y = this.state.location_y\r\n    return (\r\n        <div className={\"row\"}>\r\n            <div className={\"row s6\"}><span>Follow the ball.</span></div>\r\n            <Motion style={{x: spring(this.state.scroll ? 600 : 0)}}>\r\n                {({x}) =>\r\n                <div className=\"demo0\">\r\n                    <div className=\"demo0-block\" style={{\r\n                        WebkitTransform: `translate3d(${location_x+'px'}, ${location_y+'px'}, 0)`,\r\n                        transform: `translate3d(${location_x+'px'}, ${location_y+'px'}, 0)`,\r\n                    }} />\r\n                    </div>\r\n                    }\r\n            </Motion>\r\n        </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default FirstExercise;","import React, {Component} from 'react'\r\n\r\nconst formattedSeconds = (sec) =>\r\n  Math.floor(sec / 60) +\r\n    ':' +\r\n  ('0' + sec % 60).slice(-2)\r\n\r\n\r\nclass StopWatch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      secondsElapsed: 0,\r\n      laps: [],\r\n      lastClearedIncrementer: null\r\n    };\r\n    this.incrementer = null;\r\n  }  \r\n    \r\n  handleStartClick() {\r\n    this.incrementer = setInterval( () =>\r\n      this.setState({\r\n        secondsElapsed: this.state.secondsElapsed + 1\r\n      })\r\n    , 1000);\r\n  }\r\n  \r\n  handleStopClick() {\r\n    clearInterval(this.incrementer);\r\n    this.setState({\r\n      lastClearedIncrementer: this.incrementer\r\n    });\r\n  }\r\n  \r\n  handleResetClick() {\r\n    clearInterval(this.incrementer);\r\n    this.setState({\r\n      secondsElapsed: 0,\r\n      laps: []\r\n    });\r\n  }\r\n  \r\n  handleLabClick() {\r\n    this.setState({\r\n      laps: this.state.laps.concat([this.state.secondsElapsed])\r\n    })\r\n  }\r\n  componentDidMount(){\r\n    if(this.props.start === true){\r\n        this.incrementer = setInterval( () =>\r\n        this.setState({\r\n          secondsElapsed: this.state.secondsElapsed + 1\r\n        })\r\n      , 1000);\r\n      }\r\n  }\r\n  render() {\r\n      if(this.props.start === false){\r\n        clearInterval(this.incrementer);\r\n      }\r\n    return (\r\n      <div className=\"stopwatch\">\r\n        <h5 className=\"stopwatch-timer\">{formattedSeconds(this.state.secondsElapsed)}</h5>\r\n        {(this.state.secondsElapsed !== 0 &&\r\n          this.incrementer === this.state.lastClearedIncrementer\r\n          ? <Button onClick={this.handleResetClick.bind(this)}>reset</Button>\r\n          : null\r\n        )}\r\n\r\n        <ul className=\"stopwatch-laps\">\r\n          { this.state.laps.map((lap, i) =>\r\n              <li className=\"stopwatch-lap\"><strong>{i + 1}</strong>/ {formattedSeconds(lap)}</li>)\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** verbose component before 0.14\r\nclass Button extends React.Component {\r\n  render() {\r\n    return <button type=\"button\" {...this.props}\r\n                   className={\"btn \" + this.props.className } />;\r\n  }\r\n}\r\n*/\r\n\r\nconst Button = (props) =>\r\n  <button type=\"button\" {...props} className={\"btn \" + props.className } />;\r\n\r\nexport default StopWatch;","import React, {Component} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport StopWatch from './StopWatch';\r\n\r\nclass OrderNumber extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            numbers: [],\r\n            currentNumber: 1,\r\n            ismounted: true\r\n        }\r\n        this._ismounted = false;\r\n    }\r\n\r\n    handleNumberClick(number) {\r\n        let currentNumber = this.state.currentNumber\r\n        if(number === currentNumber){\r\n            this.setState({ currentNumber: currentNumber + 1 })\r\n            if(currentNumber === 25){\r\n                this.setState({\r\n                    ismounted: false,\r\n                    currentNumber: ''\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        var arr = []\r\n        while(arr.length < 25){\r\n            var r = Math.floor(Math.random()*25) + 1;\r\n            if(arr.indexOf(r) === -1) arr.push(r);\r\n        }\r\n        this.setState({numbers: arr})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.startStopWatch()\r\n        this.setState({ismounted: true})\r\n    }\r\n\r\n    startStopWatch(){\r\n        if (this._ismounted) {\r\n            return <StopWatch />\r\n          }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._ismounted = false;\r\n    }\r\n\r\n    render(){\r\n        const numbers = this.state.numbers\r\n        const currentNumber = this.state.currentNumber\r\n        return(\r\n            <div className={\"row\"}>\r\n                <div className={\"row s6\"}><span>Sort numbers</span></div>\r\n                <div>\r\n                    {numbers.map((number, i) => (\r\n                        <span key={i}>\r\n                            <button variant=\"outlined\" color=\"secondary\" className={\"waves-effect waves-light btn deep-purple lighten-2 order-number-buttons\"} value={number} onClick={() => this.handleNumberClick(number)}>\r\n                                {number}\r\n                            </button>\r\n                            {((i+1) % 5) === 0 &&\r\n                                <br/>\r\n                            }\r\n                        </span>\r\n                    ))}\r\n                Next Number: {currentNumber}\r\n                <StopWatch start={this.state.ismounted}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderNumber;","import React, { Component } from 'react';\nimport './App.scss';\nimport RememberNumber from './exercises/RememberNumber'\nimport RememberWord from './exercises/RememberWord'\nimport FindMistakeWords from './exercises/FindMistakeWords'\nimport FindMistakeWords2 from './exercises/FindMistakeWords2'\nimport FirstExercise from './exercises/FirstExercise'\nimport OrderNumber from './exercises/OrderNumber'\n\nconst Button = ({button, handleButton}) => (\n  <button className={\"waves-effect waves-light btn\"} value={button} onClick={handleButton}>{button}</button>\n);\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      buttons: [1,2,3,4,5,6],\n      selected: 0\n    }\n    this.button='';\n  }\n\n  componentDidMount(){\n    return this.button = <FirstExercise />\n  }\n\n  handleButton=(e)=>{\n    e.preventDefault()\n    var buttonNum = e.target.value\n    this.setState({selected: buttonNum})\n    this.renderComponents(buttonNum)\n  }\n\n  renderComponents=(buttonNum)=>{\n    switch(buttonNum){\n      case '1':\n        return this.button = <FirstExercise />\n      case '2':\n        return this.button = <OrderNumber />\n      case '3':\n        return this.button = <FindMistakeWords />\n      case '4':\n        return this.button = <FindMistakeWords2 />//\n      case '5':\n        return this.button = <RememberNumber />\n      case '6':\n        return this.button = <RememberWord   />\n      default:\n        return this.button = <FirstExercise />\n    }\n  }\n  render() {\n    const buttons = this.state.buttons.map( (button, i) => <Button key={button.id} handleButton={this.handleButton} button={button} />);\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8\">\n            <h3>Haleluya</h3><hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          {buttons}\n        </div>\n        <div className=\"row\">\n          {this.button}\n          {\n            !this.button &&\n            <FirstExercise />\n          }\n        </div>\n        <a href=\"https://www.github.com/ebrugulec/speed_reading\"\n          target=\"_blank\" className=\"github-corner\" aria-label=\"View source on GitHub\">\n          <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={{fill:\"#151513\", color:\"#fff\", position: \"absolute\", top: \"0\", border: \"0\", right: \"0\"}} aria-hidden=\"true\">\n            <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n            <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{transformOrigin: \"130px 106px\"}} className=\"octo-arm\"></path>\n            <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}